"""Initial migration

Revision ID: a2e9959f5e4f
Revises: 
Create Date: 2025-10-24 19:57:33.388912

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a2e9959f5e4f'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ingredients',
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('unit', sa.String(), nullable=False),
    sa.Column('quantity', sa.Numeric(), nullable=False),
    sa.Column('threshold', sa.Numeric(), nullable=False),
    sa.PrimaryKeyConstraint('ingredient_id')
    )
    op.create_index(op.f('ix_ingredients_ingredient_id'), 'ingredients', ['ingredient_id'], unique=False)
    op.create_table('menu_items',
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Numeric(), nullable=True),
    sa.Column('category', sa.Enum('MAIN', 'GARNISH', 'STARTER', 'SOUP', 'SNACK', 'DRINK', 'DESSERT', 'OTHER', name='menucategory'), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('item_id')
    )
    op.create_index(op.f('ix_menu_items_item_id'), 'menu_items', ['item_id'], unique=False)
    op.create_table('resumes',
    sa.Column('resume_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('response', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'ACCEPTED', 'REJECTED', name='resumestatus'), nullable=False),
    sa.PrimaryKeyConstraint('resume_id')
    )
    op.create_index(op.f('ix_resumes_resume_id'), 'resumes', ['resume_id'], unique=False)
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'WAITER', 'COOK', 'BARKEEPER', 'CLIENT', name='userrole'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_table('menu_item_images',
    sa.Column('image_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['menu_items.item_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('image_id')
    )
    op.create_index(op.f('ix_menu_item_images_image_id'), 'menu_item_images', ['image_id'], unique=False)
    op.create_table('menu_item_ingredients',
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.Column('required_quantity', sa.Numeric(), nullable=False),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredients.ingredient_id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['menu_items.item_id'], ),
    sa.PrimaryKeyConstraint('item_id', 'ingredient_id')
    )
    op.create_table('orders',
    sa.Column('order_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('order_date', sa.TIMESTAMP(), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'READY', 'COMPLETED', 'CANCELLED', name='orderstatus'), nullable=False),
    sa.Column('table_number', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_index(op.f('ix_orders_order_id'), 'orders', ['order_id'], unique=False)
    op.create_table('staff_shifts',
    sa.Column('shift_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('shift_date', sa.Date(), nullable=False),
    sa.Column('shift_start', sa.Time(), nullable=False),
    sa.Column('shift_end', sa.Time(), nullable=False),
    sa.CheckConstraint('shift_end > shift_start', name='check_shift_end_after_start'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('shift_id')
    )
    op.create_index(op.f('ix_staff_shifts_shift_id'), 'staff_shifts', ['shift_id'], unique=False)
    op.create_table('supply_orders',
    sa.Column('supply_order_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.Column('ordered_quantity', sa.Numeric(precision=10, scale=3), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'DELIVERED', 'CANCELLED', name='supplystatus'), nullable=False),
    sa.Column('order_date', sa.TIMESTAMP(), nullable=False),
    sa.Column('delivery_date', sa.TIMESTAMP(), nullable=True),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.CheckConstraint('delivery_date IS NULL OR delivery_date >= order_date', name='check_delivery_date'),
    sa.CheckConstraint('ordered_quantity > 0', name='check_positive_quantity'),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredients.ingredient_id'], ),
    sa.PrimaryKeyConstraint('supply_order_id')
    )
    op.create_index(op.f('ix_supply_orders_supply_order_id'), 'supply_orders', ['supply_order_id'], unique=False)
    op.create_table('table_bookings',
    sa.Column('booking_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('table_number', sa.Integer(), nullable=False),
    sa.Column('booking_time', sa.DateTime(), nullable=False),
    sa.Column('customer_name', sa.String(length=100), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('CONFIRMED', 'CANCELLED', 'COMPLETED', name='bookingstatus'), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.CheckConstraint('duration_minutes > 0', name='check_positive_duration'),
    sa.CheckConstraint('table_number > 0', name='check_positive_table'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('booking_id')
    )
    op.create_index(op.f('ix_table_bookings_booking_id'), 'table_bookings', ['booking_id'], unique=False)
    op.create_table('order_assignments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('WAITER', 'COOK', 'BARKEEPER', name='staffrole'), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.order_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_assignments_id'), 'order_assignments', ['id'], unique=False)
    op.create_table('order_items',
    sa.Column('order_item_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Numeric(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'READY', 'COMPLETED', name='orderitemstatus'), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['menu_items.item_id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.order_id'], ),
    sa.PrimaryKeyConstraint('order_item_id')
    )
    op.create_index(op.f('ix_order_items_order_item_id'), 'order_items', ['order_item_id'], unique=False)
    op.create_table('reviews',
    sa.Column('review_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('review_date', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('admin_response', sa.Text(), nullable=True),
    sa.CheckConstraint('rating >= 1 AND rating <= 5', name='check_rating_between_1_and_5'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.order_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('review_id')
    )
    op.create_index(op.f('ix_reviews_review_id'), 'reviews', ['review_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_reviews_review_id'), table_name='reviews')
    op.drop_table('reviews')
    op.drop_index(op.f('ix_order_items_order_item_id'), table_name='order_items')
    op.drop_table('order_items')
    op.drop_index(op.f('ix_order_assignments_id'), table_name='order_assignments')
    op.drop_table('order_assignments')
    op.drop_index(op.f('ix_table_bookings_booking_id'), table_name='table_bookings')
    op.drop_table('table_bookings')
    op.drop_index(op.f('ix_supply_orders_supply_order_id'), table_name='supply_orders')
    op.drop_table('supply_orders')
    op.drop_index(op.f('ix_staff_shifts_shift_id'), table_name='staff_shifts')
    op.drop_table('staff_shifts')
    op.drop_index(op.f('ix_orders_order_id'), table_name='orders')
    op.drop_table('orders')
    op.drop_table('menu_item_ingredients')
    op.drop_index(op.f('ix_menu_item_images_image_id'), table_name='menu_item_images')
    op.drop_table('menu_item_images')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_resumes_resume_id'), table_name='resumes')
    op.drop_table('resumes')
    op.drop_index(op.f('ix_menu_items_item_id'), table_name='menu_items')
    op.drop_table('menu_items')
    op.drop_index(op.f('ix_ingredients_ingredient_id'), table_name='ingredients')
    op.drop_table('ingredients')
    # ### end Alembic commands ###
